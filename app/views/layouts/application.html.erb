<!DOCTYPE html>
<html>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
<head>
  <title>Heard it? Seen it? Report it!</title>
  <%= stylesheet_link_tag    'application', media: 'all', 'data-turbolinks-track' => true %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track' => true %>
  <%= csrf_meta_tags %>
  <script src="//maps.google.com/maps/api/js?v=3.23&key=AIzaSyBfCRSEfQ6vvMOgm6JXb7XgqSrSDlWE7Ss&libraries=geometry" type="text/javascript"></script>
  <script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
  <script src='//cdn.rawgit.com/printercu/google-maps-utility-library-v3-read-only/master/infobox/src/infobox_packed.js' type='text/javascript'></script> <!-- only if you need custom infoboxes -->

  <style>
        html, body {
          height: 100%;
          margin: 0;
          padding: 0;
        }
        #map {
          height: 100%;
        }
        .controls {
          margin-top: 10px;
          border: 1px solid transparent;
          border-radius: 2px 0 0 2px;
          box-sizing: border-box;
          -moz-box-sizing: border-box;
          height: 32px;
          outline: none;
          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
          background-color: #fff;
          font-family: Roboto;
          font-size: 15px;
          font-weight: 300;
          margin-left: 12px;
          padding: 0 11px 0 13px;
          text-overflow: ellipsis;
          width: 300px;
        }

        #pac-input:focus {
          border-color: #4d90fe;
        }

        .pac-container {
          font-family: Roboto;
        }

        #type-selector {
          color: #fff;
          background-color: #4d90fe;
          padding: 5px 11px 0px 11px;
        }

        #type-selector label {
          font-family: Roboto;
          font-size: 13px;
          font-weight: 300;
        }
        #target {
          width: 345px;
        }
      </style>


</head>

<body>
<div class="container-fluid">
  <div class = "row">

    <nav class="navbar navbar-default">
      <div class="container-fluid">

        <!-- <div class="navbar-header">
        </div> -->

      <!-- Collect the nav links, forms, and other content for toggling -->
      <div class="collapse navbar-collapse">
        <%= link_to "WTF", root_path, class: "navbar-brand" %>
        <% if user_signed_in? %>
          <ul class="nav navbar-nav navbar-left">
            <li><button type="button" class="btn btn-default navbar-btn space-left">Heard It</button> </li>
            <li><button type="button" class="btn btn-default navbar-btn space-left">Saw It</button> </li>
            <li><button type="button" class="btn btn-default navbar-btn space-left" onclick="geoFindMe()">Get my location</button></li>
          </ul>
        <% end %>

          <ul class="nav navbar-nav navbar-right" id="user_nav">
            <% if user_signed_in? %>
              <li><%= link_to current_user.username, user_path(current_user) %></li>
              <li><%= link_to "Sign out", destroy_user_session_path, :method => :delete %></li>
            <% else %>
              <li><%= link_to "Sign up", new_user_registration_path %></li>
              <li><%= link_to "Sign in", new_user_session_path %></li>
            <% end %>
          </ul>
        </div><!-- /.navbar-collapse -->
      </div>
    </nav>
    <div id="flash_error">
      <% flash.each do |name, msg| %>
        <% if name === "notice" %>
          <li class = "bg-success"><%= name %> : <%= msg %></li>
        <% else %>
          <li class = "bg-danger"><%= name %> : <%= msg %></li>
        <% end %>
      <% end %>
    </div>

    <div class = "row">
      <div class="col-xs-12">

        <div id="map">
        </div>

      </div>

    <%= yield %>

      </div>
    </div>
  </div>
</div>
<script>
$('#drop-pin').on('click', initAutocomplete(e){
  prevent.default();
})

function initAutocomplete() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: "latitude", lng: "longitude"},
    zoom: 13,
    mapTypeId: google.maps.MapTypeId.ROADMAP
  });

  // Create the search box and link it to the UI element.
  var input = document.getElementById('pac-input');
  var searchBox = new google.maps.places.SearchBox(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

  // Bias the SearchBox results towards current map's viewport.
  map.addListener('bounds_changed', function() {
    searchBox.setBounds(map.getBounds());
  });

  var markers = [];
  // Listen for the event fired when the user selects a prediction and retrieve
  // more details for that place.
  searchBox.addListener('places_changed', function() {
    var places = searchBox.getPlaces();

    if (places.length == 0) {
      return;
    }

    // Clear out the old markers.
    markers.forEach(function(marker) {
      marker.setMap(null);
    });
    markers = [];

    // For each place, get the icon, name and location.
    var bounds = new google.maps.LatLngBounds();
    places.forEach(function(place) {
      var icon = {
        url: place.icon,
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: place.name,
        position: place.geometry.location
      }));

      if (place.geometry.viewport) {
        // Only geocodes have viewport.
        bounds.union(place.geometry.viewport);
      } else {
        bounds.extend(place.geometry.location);
      }
    });
    map.fitBounds(bounds);
  });
}
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCY7ouPL8A2Cwb6c5miCoYAPuYcPoYhKcw&libraries=places&callback=initAutocomplete"
         async defer></script>
</body>
</html>
